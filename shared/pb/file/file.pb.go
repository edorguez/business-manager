// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: file.proto

package file

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BucketName    string                 `protobuf:"bytes,1,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	FolderName    string                 `protobuf:"bytes,2,opt,name=folderName,proto3" json:"folderName,omitempty"`
	Files         []*FileData            `protobuf:"bytes,3,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFilesRequest) Reset() {
	*x = UploadFilesRequest{}
	mi := &file_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFilesRequest) ProtoMessage() {}

func (x *UploadFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFilesRequest.ProtoReflect.Descriptor instead.
func (*UploadFilesRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{0}
}

func (x *UploadFilesRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *UploadFilesRequest) GetFolderName() string {
	if x != nil {
		return x.FolderName
	}
	return ""
}

func (x *UploadFilesRequest) GetFiles() []*FileData {
	if x != nil {
		return x.Files
	}
	return nil
}

type FileData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileData      []byte                 `protobuf:"bytes,2,opt,name=fileData,proto3" json:"fileData,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileData) Reset() {
	*x = FileData{}
	mi := &file_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileData) ProtoMessage() {}

func (x *FileData) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileData.ProtoReflect.Descriptor instead.
func (*FileData) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{1}
}

func (x *FileData) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileData) GetFileData() []byte {
	if x != nil {
		return x.FileData
	}
	return nil
}

type UploadFilesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileUrls      []string               `protobuf:"bytes,1,rep,name=fileUrls,proto3" json:"fileUrls,omitempty"`
	Status        int64                  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFilesResponse) Reset() {
	*x = UploadFilesResponse{}
	mi := &file_file_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFilesResponse) ProtoMessage() {}

func (x *UploadFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFilesResponse.ProtoReflect.Descriptor instead.
func (*UploadFilesResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{2}
}

func (x *UploadFilesResponse) GetFileUrls() []string {
	if x != nil {
		return x.FileUrls
	}
	return nil
}

func (x *UploadFilesResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UploadFilesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DeleteFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BucketName    string                 `protobuf:"bytes,1,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	FolderName    string                 `protobuf:"bytes,2,opt,name=folderName,proto3" json:"folderName,omitempty"`
	FileNames     []string               `protobuf:"bytes,3,rep,name=fileNames,proto3" json:"fileNames,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFilesRequest) Reset() {
	*x = DeleteFilesRequest{}
	mi := &file_file_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFilesRequest) ProtoMessage() {}

func (x *DeleteFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFilesRequest.ProtoReflect.Descriptor instead.
func (*DeleteFilesRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteFilesRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *DeleteFilesRequest) GetFolderName() string {
	if x != nil {
		return x.FolderName
	}
	return ""
}

func (x *DeleteFilesRequest) GetFileNames() []string {
	if x != nil {
		return x.FileNames
	}
	return nil
}

type DeleteFilesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int64                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFilesResponse) Reset() {
	*x = DeleteFilesResponse{}
	mi := &file_file_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFilesResponse) ProtoMessage() {}

func (x *DeleteFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFilesResponse.ProtoReflect.Descriptor instead.
func (*DeleteFilesResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteFilesResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeleteFilesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_file_proto protoreflect.FileDescriptor

const file_file_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"file.proto\x12\x04file\"z\n" +
	"\x12UploadFilesRequest\x12\x1e\n" +
	"\n" +
	"bucketName\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1e\n" +
	"\n" +
	"folderName\x18\x02 \x01(\tR\n" +
	"folderName\x12$\n" +
	"\x05files\x18\x03 \x03(\v2\x0e.file.FileDataR\x05files\"B\n" +
	"\bFileData\x12\x1a\n" +
	"\bfileName\x18\x01 \x01(\tR\bfileName\x12\x1a\n" +
	"\bfileData\x18\x02 \x01(\fR\bfileData\"_\n" +
	"\x13UploadFilesResponse\x12\x1a\n" +
	"\bfileUrls\x18\x01 \x03(\tR\bfileUrls\x12\x16\n" +
	"\x06status\x18\x02 \x01(\x03R\x06status\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"r\n" +
	"\x12DeleteFilesRequest\x12\x1e\n" +
	"\n" +
	"bucketName\x18\x01 \x01(\tR\n" +
	"bucketName\x12\x1e\n" +
	"\n" +
	"folderName\x18\x02 \x01(\tR\n" +
	"folderName\x12\x1c\n" +
	"\tfileNames\x18\x03 \x03(\tR\tfileNames\"C\n" +
	"\x13DeleteFilesResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\x03R\x06status\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error2\x95\x01\n" +
	"\vFileService\x12B\n" +
	"\vUploadFiles\x12\x18.file.UploadFilesRequest\x1a\x19.file.UploadFilesResponse\x12B\n" +
	"\vDeleteFiles\x12\x18.file.DeleteFilesRequest\x1a\x19.file.DeleteFilesResponseB\bZ\x06./fileb\x06proto3"

var (
	file_file_proto_rawDescOnce sync.Once
	file_file_proto_rawDescData []byte
)

func file_file_proto_rawDescGZIP() []byte {
	file_file_proto_rawDescOnce.Do(func() {
		file_file_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file_proto_rawDesc), len(file_file_proto_rawDesc)))
	})
	return file_file_proto_rawDescData
}

var file_file_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_file_proto_goTypes = []any{
	(*UploadFilesRequest)(nil),  // 0: file.UploadFilesRequest
	(*FileData)(nil),            // 1: file.FileData
	(*UploadFilesResponse)(nil), // 2: file.UploadFilesResponse
	(*DeleteFilesRequest)(nil),  // 3: file.DeleteFilesRequest
	(*DeleteFilesResponse)(nil), // 4: file.DeleteFilesResponse
}
var file_file_proto_depIdxs = []int32{
	1, // 0: file.UploadFilesRequest.files:type_name -> file.FileData
	0, // 1: file.FileService.UploadFiles:input_type -> file.UploadFilesRequest
	3, // 2: file.FileService.DeleteFiles:input_type -> file.DeleteFilesRequest
	2, // 3: file.FileService.UploadFiles:output_type -> file.UploadFilesResponse
	4, // 4: file.FileService.DeleteFiles:output_type -> file.DeleteFilesResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_file_proto_init() }
func file_file_proto_init() {
	if File_file_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file_proto_rawDesc), len(file_file_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_proto_goTypes,
		DependencyIndexes: file_file_proto_depIdxs,
		MessageInfos:      file_file_proto_msgTypes,
	}.Build()
	File_file_proto = out.File
	file_file_proto_goTypes = nil
	file_file_proto_depIdxs = nil
}
