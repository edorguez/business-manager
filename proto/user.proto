syntax = "proto3";

package user;

option go_package= "./user";

service UserService{
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc UpdateEmail(UpdateEmailRequest) returns (UpdateEmailResponse);
  rpc UpdatePassword(UpdatePasswordRequest) returns (UpdatePasswordResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
}

message CreateUserRequest{
  int64 company_id = 1;
  int64 role_id = 2;
  string email = 3;
  string password = 4;
}

message CreateUserResponse{
  int64 id = 1;
  int64 status = 2;
  string error = 3;
}

message GetUserRequest{
  int64 id = 1;
}

message GetUserResponse{
  int64 id = 1;
  int64 company_id = 2;
  int64 role_id = 3;
  string email = 4;
  Role role = 5;
  int64 status = 6;
  string error = 7;
}

message GetUsersRequest{
  int64 company_id = 1;
  int32 limit = 2;
  int32 offset = 3;
}

message GetUsersResponse{
  repeated GetUserResponse users = 1;
  int64 status = 2;
  string error = 3;
}

message Role {
  int64 id = 1;
  string name = 2;
}

message UpdateUserRequest{
  int64 id = 1;
  int64 role_id = 2;
  string email = 3;
  optional string password = 4;
}

message UpdateUserResponse{
  int64 status = 1;
  string error = 2;
}

message DeleteUserRequest{
  int64 id = 1;
}

message DeleteUserResponse{
  int64 status = 1;
  string error = 2;
}

message UpdateEmailRequest{
  int64 id = 1;
  string email = 2;
}

message UpdateEmailResponse{
  int64 status = 1;
  string error = 2;
}

message UpdatePasswordRequest{
  int64 id = 1;
  string password = 2;
}

message UpdatePasswordResponse{
  int64 status = 1;
  string error = 2;
}